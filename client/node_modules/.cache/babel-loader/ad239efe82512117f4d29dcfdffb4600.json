{"ast":null,"code":"var _jsxFileName = \"D:\\\\554\\\\code-warriors\\\\client\\\\src\\\\components\\\\EditProfile.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Navigation from \"./Navigation\";\nimport \"../App.css\";\nimport logoImg from \"../images/logo.gif\";\nimport maleUser from \"../images/male-user.svg\";\nimport femaleUser from \"../images/female-user.svg\";\nimport otherUser from \"../images/other.svg\";\nimport $, { event } from \"jquery\";\nimport { Modal } from \"bootstrap\";\nimport axios from \"axios\";\nimport { Form, FloatingLabel, Button, Row, Col } from \"react-bootstrap\";\nimport { useParams } from \"react-router-dom\";\nimport cryptojs from \"crypto-js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EditProfile = props => {\n  _s();\n\n  const [about, setAbout] = useState(undefined);\n  let firstName;\n  let lastName;\n  let email;\n  let pswd, password;\n  let confirmPswd;\n  let dob;\n  let gender;\n  let relationStatus;\n  let interests, interestedIn;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tab-pane fade\",\n    id: \"contact\",\n    role: \"tabpanel\",\n    \"aria-labelledby\": \"contact-tab\",\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      className: \"signupForm\",\n      onSubmit: async e => {\n        e.preventDefault();\n        let btn = document.getElementById(\"sub\");\n        btn.disabled = false;\n\n        if (!firstName.value) {\n          alert(\"Please enter first name\");\n          btn.disabled = false;\n          return;\n        }\n\n        let regf = /^([a-zA-Z]{2,})*$/;\n\n        if (!regf.test(firstName.value)) {\n          alert(\"Please enter valid first name\");\n          btn.disabled = false;\n          return;\n        }\n\n        if (!lastName.value) {\n          alert(\"Please enter last name\");\n          btn.disabled = false;\n          return;\n        }\n\n        let regl = /^([a-zA-Z]{2,})*$/;\n\n        if (!regl.test(lastName.value)) {\n          alert(\"Please enter valid first name\");\n          btn.disabled = false;\n          return;\n        }\n\n        if (!email.value) {\n          alert(\"Please enter email\");\n          btn.disabled = false;\n          return;\n        } //let regE = /[a-z0-9]+@[a-z]+\\.[a-z]{2,3}/\n\n\n        let regE = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n\n        if (!regE.test(email.value.toLowerCase())) {\n          alert(\"Please enter a valid email\");\n          btn.disabled = false;\n          return;\n        }\n\n        let regP = /^([a-zA-Z0-9-!$%^&*()_+|~=`{}\\[\\]:\\/;<>?,.@#]{6,})*$/;\n\n        if (pswd.value != '' && !regP.test(pswd.value)) {\n          alert(\"Password is invalid - should contain at least one digit,should contain at least one lower case, should contain at least one upper case, should contain at least 8 from the mentioned characters\");\n          btn.disabled = false;\n          return;\n        }\n\n        if (pswd.value !== confirmPswd.value) {\n          alert(\"Passwords don't match\");\n          btn.disabled = false;\n          return;\n        }\n\n        if (!gender.value) {\n          alert(\"Please provide gender\");\n          btn.disabled = false;\n          return;\n        }\n\n        const genders = [\"male\", \"female\", \"others\", \"nodisclosure\"];\n\n        if (!genders.includes(gender.value)) {\n          alert(\"Please provide valid gender\");\n          btn.disabled = false;\n          return;\n        }\n\n        if (!relationStatus.value) {\n          alert(\"Please provide relationship status\");\n          btn.disabled = false;\n          return;\n        }\n\n        const relationship = [\"married\", \"single\", \"inarelation\", \"nodisclosure\"];\n        console.log(relationStatus.value);\n\n        if (relationStatus.value) {\n          console.log(relationStatus.value);\n\n          if (!relationship.includes(relationStatus.value)) {\n            alert(\"Please provide valid relation status\");\n            btn.disabled = false;\n            return;\n          }\n        }\n\n        if (interests.value.trim().length == 0) {\n          interests.value = \"Prefer not to disclose\";\n        }\n\n        let relstat = \"\";\n\n        if (firstName.value == props.about.firstName) {\n          firstName.value = \"\";\n        }\n\n        if (lastName.value == props.about.lastName) {\n          lastName.value = \"\";\n        }\n\n        if (email.value == props.about.email) {\n          email.value = \"\";\n        }\n\n        if (gender.value == props.about.gender) {\n          gender.value = \"\";\n        }\n\n        console.log(relationStatus.value);\n        console.log(props.about);\n\n        if (relationStatus.value == props.about.relationshipStatus) {\n          relationStatus.value = \"\";\n        }\n\n        if (interests.value == props.about.interests) {\n          interests.value = \"\";\n        }\n\n        let user = {\n          firstName: firstName.value,\n          lastName: lastName.value,\n          email: email.value,\n          password: pswd.value,\n          // dateOfBirth:props.about.dateOfBirth,\n          gender: gender.value,\n          relationshipStatus: relationStatus.value,\n          interestedIn: interests.value\n        }; // let temp = JSON.parse(user);\n\n        let flag = false;\n        let url = 'http:/localhost:3000/updateprofile';\n        console.log(user); //let msg = await axios.post('http:/localhost:3000/signup', user);\n\n        const instance = axios.create({\n          baseURL: '*',\n          timeout: 20000,\n          withCredentials: true,\n          headers: {\n            'Content-Type': 'application/json;charset=UTF-8',\n            \"Access-Control-Allow-Origin\": \"*\"\n          },\n          validateStatus: function (status) {\n            return status < 500; // Resolve only if the status code is less than 500\n          }\n        });\n        setAbout([user]);\n        console.log(user);\n        await instance.patch(`http://localhost:3000/updateprofile`, user).then(function (response) {\n          console.log(response);\n\n          if (response.status === 200) {\n            alert(\"Your profile is updated !!!\");\n            flag = true;\n            window.location.reload();\n          }\n        }).catch(function (error) {\n          console.log(error); //setSuccess(false);\n\n          alert(\"There was some error please try again\");\n        });\n        e.target.reset(); //btn.disabled = false;\n\n        if (flag) {\n          props.handleClose(false);\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        className: \"mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          as: Col,\n          children: /*#__PURE__*/_jsxDEV(FloatingLabel, {\n            controlId: \"firstName\",\n            label: \"First Name\",\n            className: \"mb-3\",\n            children: /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              placeholder: \"First Name\",\n              defaultValue: props.about.firstName,\n              className: \"textform\",\n              ref: node => {\n                firstName = node;\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 16\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          as: Col,\n          children: /*#__PURE__*/_jsxDEV(FloatingLabel, {\n            controlId: \"lastName\",\n            label: \"Last Name\",\n            className: \"mb-3\",\n            children: /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              placeholder: \"Last Name\",\n              defaultValue: props.about.lastName,\n              className: \"textform\",\n              ref: node => {\n                lastName = node;\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        children: [/*#__PURE__*/_jsxDEV(FloatingLabel, {\n          controlId: \"email\",\n          label: \"Email\",\n          className: \"mb-3\",\n          children: /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"email\",\n            placeholder: \"name@example.com\",\n            className: \"textform\",\n            defaultValue: props.about.email,\n            ref: node => {\n              email = node;\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FloatingLabel, {\n          controlId: \"floatingPassword\",\n          label: \"Password\",\n          className: \"mb-3\",\n          children: /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"password\",\n            placeholder: \"Password\",\n            className: \"textform\",\n            ref: node => {\n              pswd = node;\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(FloatingLabel, {\n          controlId: \"floatingCPassword\",\n          label: \"Confirm Password\",\n          className: \"mb-3\",\n          children: /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"password\",\n            placeholder: \"Confirm Password\",\n            className: \"textform\",\n            ref: node => {\n              confirmPswd = node;\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n          className: \"select\",\n          children: [\"Gender\", props.about.gender && props.about.gender == \"male\" ? /*#__PURE__*/_jsxDEV(Form.Select, {\n            \"aria-label\": \"Gender\",\n            size: \"lg\",\n            className: \"textform\",\n            ref: node => {\n              gender = node;\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"male\",\n              selected: true,\n              children: \"Male\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"female\",\n              children: \"Female\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"others\",\n              children: \"Others\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 300,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"nodisclosure\",\n              children: \"Prefer not to disclose\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 18\n          }, this) : props.about.gender == \"female\" ? /*#__PURE__*/_jsxDEV(Form.Select, {\n            \"aria-label\": \"Gender\",\n            size: \"lg\",\n            className: \"textform\",\n            ref: node => {\n              gender = node;\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"male\",\n              children: \"Male\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"female\",\n              selected: true,\n              children: \"Female\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 313,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"others\",\n              children: \"Others\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 314,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"nodisclosure\",\n              children: \"Prefer not to disclose\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 18\n          }, this) : props.about.gender == \"others\" ? /*#__PURE__*/_jsxDEV(Form.Select, {\n            \"aria-label\": \"Gender\",\n            size: \"lg\",\n            className: \"textform\",\n            ref: node => {\n              gender = node;\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"male\",\n              children: \"Male\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 326,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"female\",\n              children: \"Female\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"others\",\n              selected: true,\n              children: \"Others\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 328,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"nodisclosure\",\n              children: \"Prefer not to disclose\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 329,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 18\n          }, this) : /*#__PURE__*/_jsxDEV(Form.Select, {\n            \"aria-label\": \"Gender\",\n            size: \"lg\",\n            className: \"textform\",\n            ref: node => {\n              gender = node;\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"male\",\n              children: \"Male\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 339,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"female\",\n              children: \"Female\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 340,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"others\",\n              children: \"Others\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 341,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"nodisclosure\",\n              selected: true,\n              children: \"Prefer not to disclose\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 342,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 18\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n          className: \"select\",\n          children: [\"Relationship Status\", props.about.relationshipStatus && props.about.relationshipStatus == \"married\" ? /*#__PURE__*/_jsxDEV(Form.Select, {\n            \"aria-label\": \"relationship status\",\n            className: \"textform\",\n            size: \"lg\",\n            ref: node => {\n              relationStatus = node;\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"married\",\n              selected: true,\n              children: \"Married\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 357,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"single\",\n              children: \"Single\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 358,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"inarelation\",\n              children: \"In a Relationship\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 359,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"nodisclosure\",\n              children: \"Prefer not to disclose\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 360,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 18\n          }, this) : props.about.relationshipStatus == \"single\" ? /*#__PURE__*/_jsxDEV(Form.Select, {\n            \"aria-label\": \"relationship status\",\n            className: \"textform\",\n            size: \"lg\",\n            ref: node => {\n              relationStatus = node;\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"married\",\n              children: \"Married\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 370,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"single\",\n              selected: true,\n              children: \"Single\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 371,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"inarelation\",\n              children: \"In a Relationship\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 372,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"nodisclosure\",\n              children: \"Prefer not to disclose\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 373,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 364,\n            columnNumber: 18\n          }, this) : props.about.relationshipStatus == \"inarelation\" ? /*#__PURE__*/_jsxDEV(Form.Select, {\n            \"aria-label\": \"relationship status\",\n            className: \"textform\",\n            size: \"lg\",\n            ref: node => {\n              relationStatus = node;\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"married\",\n              children: \"Married\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 383,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"single\",\n              children: \"Single\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 384,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"inarelation\",\n              selected: true,\n              children: \"In a Relationship\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 385,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"nodisclosure\",\n              children: \"Prefer not to disclose\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 386,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 377,\n            columnNumber: 18\n          }, this) : /*#__PURE__*/_jsxDEV(Form.Select, {\n            \"aria-label\": \"relationship status\",\n            className: \"textform\",\n            size: \"lg\",\n            ref: node => {\n              relationStatus = node;\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"married\",\n              children: \"Married\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 395,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"single\",\n              children: \"Single\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 396,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"inarelation\",\n              children: \"In a Relationship\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 397,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"nodisclosure\",\n              selected: true,\n              children: \"Prefer not to disclose\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 398,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 389,\n            columnNumber: 18\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(FloatingLabel, {\n          controlId: \"floatingtextarea\",\n          label: \"Interests\",\n          className: \"mb-3\",\n          children: /*#__PURE__*/_jsxDEV(Form.Control, {\n            as: \"textarea\",\n            rows: 10,\n            placeholder: \"Interests\",\n            className: \"textarea\",\n            defaultValue: props.about.interestedIn,\n            ref: node => {\n              interests = node;\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 405,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        id: \"sub\",\n        variant: \"primary\",\n        type: \"submit\",\n        className: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 414,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EditProfile, \"KKhpq8jc3bxCW0NmsJF4jHMEYiQ=\");\n\n_c = EditProfile;\nexport default EditProfile;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditProfile\");","map":{"version":3,"names":["React","useState","useEffect","Navigation","logoImg","maleUser","femaleUser","otherUser","$","event","Modal","axios","Form","FloatingLabel","Button","Row","Col","useParams","cryptojs","EditProfile","props","about","setAbout","undefined","firstName","lastName","email","pswd","password","confirmPswd","dob","gender","relationStatus","interests","interestedIn","e","preventDefault","btn","document","getElementById","disabled","value","alert","regf","test","regl","regE","toLowerCase","regP","genders","includes","relationship","console","log","trim","length","relstat","relationshipStatus","user","flag","url","instance","create","baseURL","timeout","withCredentials","headers","validateStatus","status","patch","then","response","window","location","reload","catch","error","target","reset","handleClose","node"],"sources":["D:/554/code-warriors/client/src/components/EditProfile.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Navigation from \"./Navigation\";\r\nimport \"../App.css\";\r\nimport logoImg from \"../images/logo.gif\";\r\nimport maleUser from \"../images/male-user.svg\";\r\nimport femaleUser from \"../images/female-user.svg\";\r\nimport otherUser from \"../images/other.svg\";\r\nimport $, { event } from \"jquery\";\r\nimport { Modal } from \"bootstrap\";\r\nimport axios from \"axios\";\r\nimport { Form, FloatingLabel, Button, Row, Col } from \"react-bootstrap\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport cryptojs from \"crypto-js\";\r\nconst EditProfile = (props) => {\r\n    const [about , setAbout] = useState(undefined);\r\n    let firstName;\r\n  let lastName;\r\n  let email;\r\n  let pswd,password;\r\n  let confirmPswd;\r\n  let dob;\r\n  let gender;\r\n  let relationStatus;\r\n  let interests,interestedIn;\r\n  \r\n\r\nreturn(\r\n    <div className=\"tab-pane fade\" id=\"contact\" role=\"tabpanel\" aria-labelledby=\"contact-tab\">\r\n                <Form className='signupForm' onSubmit={\r\n                async (e)=>{\r\n                    e.preventDefault();\r\n                   \r\n    \r\n                    \r\n                   let btn = document.getElementById(\"sub\");\r\n                  btn.disabled = false;\r\n                   if(!firstName.value){\r\n                       alert(\"Please enter first name\");\r\n                       btn.disabled = false;\r\n                       return;\r\n                   }\r\n    \r\n                   let regf = /^([a-zA-Z]{2,})*$/;\r\n                   if(!regf.test(firstName.value)){\r\n                        alert(\"Please enter valid first name\");\r\n                        btn.disabled = false;\r\n                        return;\r\n                   }\r\n    \r\n                   if(!lastName.value){\r\n                       alert(\"Please enter last name\");\r\n                       btn.disabled = false;\r\n                       return;\r\n                   }\r\n    \r\n                   let regl = /^([a-zA-Z]{2,})*$/;\r\n                   if(!regl.test(lastName.value)){\r\n                        alert(\"Please enter valid first name\");\r\n                        btn.disabled = false;\r\n                        return;\r\n                   }\r\n    \r\n    \r\n                   if(!email.value){\r\n                       alert(\"Please enter email\");\r\n                       btn.disabled = false;\r\n                       return;\r\n                   }\r\n    \r\n                   //let regE = /[a-z0-9]+@[a-z]+\\.[a-z]{2,3}/\r\n                   let regE = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\r\n                if(!regE.test(email.value.toLowerCase())){\r\n                    alert(\"Please enter a valid email\");\r\n                    btn.disabled = false;\r\n                    return;\r\n                }\r\n    \r\n         \r\n    \r\n                   let regP = /^([a-zA-Z0-9-!$%^&*()_+|~=`{}\\[\\]:\\/;<>?,.@#]{6,})*$/\r\n                if((pswd.value != '') && (!regP.test(pswd.value))){\r\n                    alert(\"Password is invalid - should contain at least one digit,should contain at least one lower case, should contain at least one upper case, should contain at least 8 from the mentioned characters\");\r\n                    btn.disabled = false;\r\n                    return;\r\n                }\r\n    \r\n        \r\n    \r\n                   if(pswd.value !== confirmPswd.value){\r\n                       alert(\"Passwords don't match\");\r\n                       btn.disabled = false;\r\n                       return;\r\n                   }\r\n \r\n                   if(!gender.value){\r\n                       alert(\"Please provide gender\");\r\n                       btn.disabled = false;\r\n                       return;\r\n                   }\r\n                   const genders=[\"male\",\"female\",\"others\",\"nodisclosure\"];\r\n    \r\n                   if(!genders.includes(gender.value)){\r\n                    alert(\"Please provide valid gender\");\r\n                    btn.disabled = false;\r\n                    return;\r\n                   }\r\n\r\n                   if(!relationStatus.value){\r\n                       alert(\"Please provide relationship status\");\r\n                       btn.disabled = false;\r\n                       return;\r\n                   }\r\n                  \r\n                    const relationship=[\"married\", \"single\", \"inarelation\", \"nodisclosure\"]\r\n                    console.log(relationStatus.value);\r\n                    if(relationStatus.value){\r\n                        console.log(relationStatus.value);\r\n                        if(!relationship.includes(relationStatus.value)){\r\n                            alert(\"Please provide valid relation status\");\r\n                            btn.disabled = false;\r\n                            return;\r\n                        }\r\n                    }\r\n\r\n                    if(interests.value.trim().length == 0){\r\n                        interests.value = \"Prefer not to disclose\";\r\n                    }\r\n\r\n                    let relstat = \"\";\r\n\r\n                    if(firstName.value == props.about.firstName){\r\n                        firstName.value = \"\";\r\n                    }\r\n                    if(lastName.value == props.about.lastName){\r\n                        lastName.value = \"\";\r\n                    }\r\n                    if(email.value == props.about.email){\r\n                        email.value = \"\";\r\n                    }\r\n                    if(gender.value == props.about.gender){\r\n                        gender.value = \"\";\r\n                    }\r\n                    console.log(relationStatus.value)\r\n                    console.log(props.about)\r\n                    if(relationStatus.value == props.about.relationshipStatus){\r\n                       \r\n                        relationStatus.value = \"\";\r\n                    }\r\n                    if(interests.value == props.about.interests){\r\n                        interests.value = \"\";\r\n                    }\r\n\r\n    \r\n                    let user = {\r\n                        firstName: firstName.value,\r\n                        lastName : lastName.value,\r\n                        email: email.value,\r\n                        password: pswd.value,\r\n                        // dateOfBirth:props.about.dateOfBirth,\r\n                        gender: gender.value,\r\n                        relationshipStatus: relationStatus.value,\r\n                        interestedIn : interests.value\r\n                    }\r\n                   // let temp = JSON.parse(user);\r\n                   let flag = false;\r\n                   let url = 'http:/localhost:3000/updateprofile'\r\n                    console.log(user);\r\n                    //let msg = await axios.post('http:/localhost:3000/signup', user);\r\n\r\n                    const instance = axios.create({\r\n                baseURL: '*',\r\n                timeout: 20000,\r\n                withCredentials: true,\r\n              headers: {\r\n                  'Content-Type': 'application/json;charset=UTF-8',\r\n                  \"Access-Control-Allow-Origin\": \"*\",\r\n                },\r\n              validateStatus: function (status) {\r\n                  return status < 500; // Resolve only if the status code is less than 500\r\n                }\r\n            });\r\n            setAbout([user]);\r\n            console.log(user);\r\n\r\n            await instance.patch(`http://localhost:3000/updateprofile`, user)\r\n                      .then(function (response) {\r\n                        console.log(response);\r\n                        if(response.status === 200){\r\n                            alert(\"Your profile is updated !!!\");\r\n                            flag = true;\r\n                            window.location.reload();\r\n                        }\r\n                      })\r\n                      .catch(function (error) {\r\n                        console.log(error);\r\n                        //setSuccess(false);\r\n                        alert(\"There was some error please try again\");\r\n                       \r\n                      });\r\n                    \r\n                      e.target.reset();\r\n                      //btn.disabled = false;\r\n                       if(flag){\r\n                        \r\n                        props.handleClose(false);\r\n                       }            \r\n                }\r\n            }>\r\n               \r\n               <Row className=\"mb-4\">\r\n               <Form.Group as={Col}>\r\n               <FloatingLabel\r\n                controlId=\"firstName\"\r\n                label=\"First Name\"\r\n                className=\"mb-3\"\r\n                >\r\n                    <Form.Control  type=\"text\" placeholder=\"First Name\" defaultValue={props.about.firstName}\r\n                        className=\"textform\"\r\n                        ref={(node)=>{\r\n                            firstName = node;\r\n                        }}\r\n                    />\r\n                </FloatingLabel>\r\n                </Form.Group>\r\n                <Form.Group as={Col}>\r\n                    <FloatingLabel\r\n                        controlId=\"lastName\"\r\n                        label=\"Last Name\"\r\n                        className=\"mb-3\"\r\n                        \r\n                    >\r\n                    <Form.Control  type=\"text\" placeholder=\"Last Name\" defaultValue={props.about.lastName}\r\n                        className=\"textform\"\r\n                        ref={(node)=>{\r\n                            lastName = node;\r\n                        }}\r\n                    />\r\n                    </FloatingLabel>\r\n                </Form.Group>\r\n                </Row>\r\n    \r\n                <Form.Group>\r\n                    <FloatingLabel\r\n                        controlId=\"email\"\r\n                        label=\"Email\"\r\n                        className=\"mb-3\"\r\n                       \r\n                    >\r\n                    <Form.Control  type=\"email\" placeholder=\"name@example.com\"\r\n                        className=\"textform\"  defaultValue={props.about.email}\r\n                        ref={(node)=>{\r\n                            email = node;\r\n                        }}\r\n                    />\r\n                </FloatingLabel>\r\n    \r\n    \r\n                <FloatingLabel controlId=\"floatingPassword\" label=\"Password\" className=\"mb-3\">\r\n                    <Form.Control  type=\"password\" placeholder=\"Password\" \r\n                        className=\"textform\"\r\n                        ref={(node)=>{\r\n                            pswd = node;\r\n                        }}\r\n                    />\r\n                </FloatingLabel>\r\n    \r\n                <FloatingLabel controlId=\"floatingCPassword\" label=\"Confirm Password\" className=\"mb-3\">\r\n                    <Form.Control  type=\"password\" placeholder=\"Confirm Password\"\r\n                        className=\"textform\"\r\n                        ref={(node)=>{\r\n                            confirmPswd = node;\r\n                        }}\r\n                    />\r\n                </FloatingLabel>\r\n    \r\n                {/* <FloatingLabel controlId=\"date\" label=\"Date of Birth\" className=\"mb-3\" >\r\n                    <Form.Control  type=\"date\" placeholder=\"Date of Birth\" disabled\r\n                        \r\n                        className=\"textform\" defaultValue={about[0].dateOfBirth} \r\n                        ref={(node)=>{\r\n                            dob = node;\r\n                        }}\r\n                    />\r\n                </FloatingLabel> */}\r\n    \r\n    \r\n                <Form.Label className=\"select\" >\r\n                Gender\r\n                {props.about.gender && props.about.gender == \"male\" ?\r\n                (<Form.Select  aria-label=\"Gender\" size='lg'\r\n                 className=\"textform\"\r\n                 ref={(node)=>{\r\n                     gender = node;\r\n                 }}>\r\n\r\n            {/* {props.about.gender && props.about.gender == \"male\" ?  (<option value=\"male\" selected>Male</option>) : props.about.gender == \"female\" ? (<option value=\"female\" selected>Female</option>) : props.about.gender == \"others\" ? (<option value=\"others\" selected>Others</option>) : (<option value=\"nodisclosure\" selected>Prefer not to disclose</option>) } */}\r\n                    \r\n                    <option value=\"male\" selected>Male</option>\r\n                    <option value=\"female\">Female</option>\r\n                    <option value=\"others\">Others</option>\r\n                    <option value=\"nodisclosure\">Prefer not to disclose</option>\r\n                </Form.Select>):\r\n                props.about.gender == \"female\" ?\r\n                (<Form.Select  aria-label=\"Gender\" size='lg'\r\n                 className=\"textform\"\r\n                 ref={(node)=>{\r\n                     gender = node;\r\n                 }}>\r\n\r\n            {/* {props.about.gender && props.about.gender == \"male\" ?  (<option value=\"male\" selected>Male</option>) : props.about.gender == \"female\" ? (<option value=\"female\" selected>Female</option>) : props.about.gender == \"others\" ? (<option value=\"others\" selected>Others</option>) : (<option value=\"nodisclosure\" selected>Prefer not to disclose</option>) } */}\r\n                    \r\n                    <option value=\"male\">Male</option>\r\n                    <option value=\"female\" selected>Female</option>\r\n                    <option value=\"others\">Others</option>\r\n                    <option value=\"nodisclosure\">Prefer not to disclose</option>\r\n                </Form.Select>):\r\n                props.about.gender == \"others\" ?\r\n                (<Form.Select  aria-label=\"Gender\" size='lg'\r\n                 className=\"textform\"\r\n                 ref={(node)=>{\r\n                     gender = node;\r\n                 }}>\r\n\r\n            {/* {props.about.gender && props.about.gender == \"male\" ?  (<option value=\"male\" selected>Male</option>) : props.about.gender == \"female\" ? (<option value=\"female\" selected>Female</option>) : props.about.gender == \"others\" ? (<option value=\"others\" selected>Others</option>) : (<option value=\"nodisclosure\" selected>Prefer not to disclose</option>) } */}\r\n                    \r\n                    <option value=\"male\">Male</option>\r\n                    <option value=\"female\">Female</option>\r\n                    <option value=\"others\" selected>Others</option>\r\n                    <option value=\"nodisclosure\">Prefer not to disclose</option>\r\n                </Form.Select>):\r\n                (<Form.Select  aria-label=\"Gender\" size='lg'\r\n                 className=\"textform\"\r\n                 ref={(node)=>{\r\n                     gender = node;\r\n                 }}>\r\n\r\n            {/* {props.about.gender && props.about.gender == \"male\" ?  (<option value=\"male\" selected>Male</option>) : props.about.gender == \"female\" ? (<option value=\"female\" selected>Female</option>) : props.about.gender == \"others\" ? (<option value=\"others\" selected>Others</option>) : (<option value=\"nodisclosure\" selected>Prefer not to disclose</option>) } */}\r\n                    \r\n                    <option value=\"male\">Male</option>\r\n                    <option value=\"female\">Female</option>\r\n                    <option value=\"others\">Others</option>\r\n                    <option value=\"nodisclosure\" selected>Prefer not to disclose</option>\r\n                </Form.Select>)\r\n                }\r\n                </Form.Label>\r\n    \r\n                <Form.Label  className=\"select\" >\r\n                Relationship Status\r\n\r\n                {props.about.relationshipStatus && props.about.relationshipStatus == \"married\" ? \r\n                (<Form.Select aria-label=\"relationship status\"\r\n                 className=\"textform\" size='lg'\r\n                 ref={(node)=>{\r\n                     relationStatus = node;\r\n                 }}>\r\n                \r\n                <option value=\"married\" selected>Married</option>\r\n                <option value=\"single\">Single</option>\r\n                <option value=\"inarelation\">In a Relationship</option>\r\n                <option value=\"nodisclosure\">Prefer not to disclose</option>\r\n                </Form.Select>):\r\n\r\n                props.about.relationshipStatus == \"single\" ? \r\n                (<Form.Select aria-label=\"relationship status\"\r\n                 className=\"textform\" size='lg'\r\n                 ref={(node)=>{\r\n                     relationStatus = node;\r\n                 }}>\r\n                \r\n                <option value=\"married\">Married</option>\r\n                <option value=\"single\" selected>Single</option>\r\n                <option value=\"inarelation\">In a Relationship</option>\r\n                <option value=\"nodisclosure\">Prefer not to disclose</option>\r\n                </Form.Select>):\r\n\r\n                props.about.relationshipStatus == \"inarelation\" ? \r\n                (<Form.Select aria-label=\"relationship status\"\r\n                 className=\"textform\" size='lg'\r\n                 ref={(node)=>{\r\n                     relationStatus = node;\r\n                 }}>\r\n                \r\n                <option value=\"married\">Married</option>\r\n                <option value=\"single\">Single</option>\r\n                <option value=\"inarelation\" selected>In a Relationship</option>\r\n                <option value=\"nodisclosure\">Prefer not to disclose</option>\r\n                </Form.Select>):\r\n\r\n                (<Form.Select aria-label=\"relationship status\"\r\n                 className=\"textform\" size='lg'\r\n                 ref={(node)=>{\r\n                     relationStatus = node;\r\n                 }}>\r\n                \r\n                <option value=\"married\">Married</option>\r\n                <option value=\"single\">Single</option>\r\n                <option value=\"inarelation\">In a Relationship</option>\r\n                <option value=\"nodisclosure\" selected>Prefer not to disclose</option>\r\n                </Form.Select>)}\r\n\r\n                </Form.Label>\r\n    \r\n    \r\n                <FloatingLabel controlId=\"floatingtextarea\" label=\"Interests\" className=\"mb-3\" >\r\n                    <Form.Control as=\"textarea\" rows={10} placeholder=\"Interests\"\r\n                    className=\"textarea\" defaultValue={props.about.interestedIn}\r\n                    ref={(node)=>{\r\n                        interests = node;\r\n                    }}\r\n                />\r\n                </FloatingLabel>\r\n    \r\n                </Form.Group>\r\n                <Button id=\"sub\" variant=\"primary\" type=\"submit\" className=\"submit\">\r\n    Submit\r\n                </Button>\r\n                </Form>\r\n                </div>\r\n);\r\n\r\n}\r\n\r\nexport default EditProfile;"],"mappings":"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"},"metadata":{},"sourceType":"module"}